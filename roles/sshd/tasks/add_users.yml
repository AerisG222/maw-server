---
- name: add ssh public keys
  become: true
  ansible.builtin.authorized_key:
    user: "{{ _sshd__allow_user }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"

# the following 2 tasks work in tandem:
#   the first will try to find the current user in the AllowUsers line
#   the second will add the user if grep returns 1 indicating the line did not match
- name: check if user is allowed in sshd_config
  become: true
  ansible.builtin.command:
    argv:
      - grep
      - -E
      - '^AllowUsers.*\b{{ _sshd__allow_user }}\b.*$'
      - /etc/ssh/sshd_config
  changed_when: false
  failed_when: grep_allowusers.rc != 0 and grep_allowusers.rc != 1
  register: grep_allowusers

- name: add user to sshd AllowUsers
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    backup: true
    backrefs: true
    regex: "^AllowUsers\\s+(.*)$"
    line: "AllowUsers \\1 {{ _sshd__allow_user }}"
    state: present
    validate: sshd -t -f %s
  when:
    - grep_allowusers.rc == 1
  notify:
    - "reload_sshd"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: set current ssh server
  ansible.builtin.set_fact:
    current_ssh_server: "{{ ansible_host }}"

- name: validate ssh
  delegate_to: localhost
  become: false
  ansible.builtin.command:
    cmd: ssh {{ _sshd__allow_user }}@{{ current_ssh_server }} "echo success"
  register: validate_ssh_output
  changed_when: false

- name: validate ssh output
  ansible.builtin.fail:
    msg: Could not confirm SSH connectivity
  when: validate_ssh_output.stdout != "success"
  ignore_errors: "{{ ansible_check_mode }}"
